<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.dao.UUserThirdMapper">
  <resultMap id="BaseResultMap" type="com.test.entity.UUserThird">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="third_id" jdbcType="VARCHAR" property="thirdId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="login_type" jdbcType="TINYINT" property="loginType" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="register_time" jdbcType="TIMESTAMP" property="registerTime" />
    <result column="bind_mode" jdbcType="TINYINT" property="bindMode" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, nickname, third_id, username, avatar, login_type, email, create_time, 
    update_time, register_time, bind_mode
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from u_user_third
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from u_user_third
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.test.entity.UUserThird" useGeneratedKeys="true">
    insert into u_user_third (user_id, nickname, third_id, 
      username, avatar, login_type, 
      email, create_time, update_time, 
      register_time, bind_mode)
    values (#{userId,jdbcType=BIGINT}, #{nickname,jdbcType=VARCHAR}, #{thirdId,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{loginType,jdbcType=TINYINT}, 
      #{email,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{registerTime,jdbcType=TIMESTAMP}, #{bindMode,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.test.entity.UUserThird" useGeneratedKeys="true">
    insert into u_user_third
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="thirdId != null">
        third_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="loginType != null">
        login_type,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="registerTime != null">
        register_time,
      </if>
      <if test="bindMode != null">
        bind_mode,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="thirdId != null">
        #{thirdId,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="loginType != null">
        #{loginType,jdbcType=TINYINT},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="registerTime != null">
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bindMode != null">
        #{bindMode,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.test.entity.UUserThird">
    update u_user_third
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="thirdId != null">
        third_id = #{thirdId,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="loginType != null">
        login_type = #{loginType,jdbcType=TINYINT},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="registerTime != null">
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bindMode != null">
        bind_mode = #{bindMode,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.test.entity.UUserThird">
    update u_user_third
    set user_id = #{userId,jdbcType=BIGINT},
      nickname = #{nickname,jdbcType=VARCHAR},
      third_id = #{thirdId,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      login_type = #{loginType,jdbcType=TINYINT},
      email = #{email,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      bind_mode = #{bindMode,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>